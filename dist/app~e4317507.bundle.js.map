{"version":3,"file":"app~e4317507.bundle.js","mappings":";o9BAAqC,kBCkBrC,QAFgB,IDdH,WAGX,WAAYA,0GAAQ,8BAFV,yHAEU,kMAClB,CAAAC,KAAI,EAAWD,EACjB,SAKC,SALA,kCAED,WACE,MAAME,EAAMC,EAAAA,EAAAA,6BACZ,OAAOF,OAAI,oDAAJA,OAAAA,gBAAaC,EACtB,0EAAC,EAVU,GCcG,CATY,CAC1B,IAAK,IAAIE,EAAAA,EACT,QAAS,IAAIA,EAAAA,EACb,YAAa,IAAIC,EAAAA,EACjB,YAAa,IAAIC,EAAAA,EACjB,cAAe,IAAIC,EAAAA,EACnB,qBAAsB,IAAIC,EAAAA,+yBCHzB,WAEkBN,GACjB,IAAMO,EAAYP,EAAIQ,MAAM,KAC5B,MAAO,CACLC,SAAUF,EAAU,IAAM,KAC1BG,GAAIH,EAAU,IAAM,KACpBI,KAAMJ,EAAU,IAAM,KAE1B,CAAC,WAEmBK,GAClB,OAAQA,EAAWH,SAAW,IAAH,OAAOG,EAAWH,UAAa,MACrDG,EAAWF,GAAK,OAAS,KACzBE,EAAWD,KAAO,IAAH,OAAOC,EAAWD,MAAS,GACjD,kBAGF,QA5Be,sIAUZ,SAVY,6CACb,WACE,IAAMX,EAAMa,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cACpCL,EAAa,EAAAb,KAHjBE,EAAS,QAGQF,KAAiBC,GACpC,OAAO,EAAAD,KAJLE,EAAS,QAIJF,KAAkBa,EAC3B,GAAC,2CAED,WACE,IAAMZ,EAAMa,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cAC1C,OAAO,EAAAlB,KATLE,EAAS,QASJF,KAAiBC,EAC1B,IAVa,uFAUZ,EAVY,mSCCf,ijNAiBA,QAhBgB,eADhB,EACgB,GADhB,EACgB,UAAG,uFACX,kBAAmBkB,UAAS,gBAC2B,OAA3DC,QAAQC,IAAI,+CAA+C,0BAIR,OAA/CC,EAAK,IAAIC,EAAAA,GAAsB,iBAAgB,kBAG7CD,EAAGE,WAAU,OACnBJ,QAAQC,IAAI,6BAA6B,kDAEzCD,QAAQC,IAAI,oCAAqC,EAAF,IAAS,yDAb5D,+KAeC,kBAde","sources":["webpack://restaurant-apps/./src/scripts/routes/routing.js","webpack://restaurant-apps/./src/scripts/routes/routing-implementation.js","webpack://restaurant-apps/./src/scripts/routes/url-parser.js","webpack://restaurant-apps/./src/scripts/utils/sw-register.js"],"sourcesContent":["import UrlParser from './url-parser';\n\nclass Routing {\n  #routes = null;\n\n  constructor(routes) {\n    this.#routes = routes;\n  }\n\n  getCurrentPage() {\n    const url = UrlParser.parseActiveUrlWithCombiner();\n    return this.#routes[url];\n  }\n}\n\nexport default Routing;\n","import AboutUs from '../views/pages/about-us';\nimport Review from '../views/pages/review';\nimport Detail from '../views/pages/detail';\nimport Favorite from '../views/pages/favorite';\nimport Home from '../views/pages/home';\nimport Routing from './routing';\n\nconst restaurantAppRoutes = {\n  '/': new Home(),\n  '/home': new Home(),\n  '/favorite': new Favorite(),\n  '/about-us': new AboutUs(),\n  '/detail/:id': new Detail(),\n  '/detail/:id/review': new Review(),\n};\n\nconst routing = new Routing(restaurantAppRoutes);\n\nexport default routing;\n","class UrlParser {\n  static parseActiveUrlWithCombiner() {\n    const url = window.location.hash.slice(1).toLowerCase();\n    const splitedUrl = this.#urlSpliter(url);\n    return this.#urlCombiner(splitedUrl);\n  }\n\n  static parseActiveUrlWithoutCombiner() {\n    const url = window.location.hash.slice(1).toLowerCase();\n    return this.#urlSpliter(url);\n  }\n\n  static #urlSpliter(url) {\n    const urlSplits = url.split('/');\n    return {\n      resource: urlSplits[1] || null,\n      id: urlSplits[2] || null,\n      verb: urlSplits[3] || null,\n    };\n  }\n\n  static #urlCombiner(splitedUrl) {\n    return (splitedUrl.resource ? `/${splitedUrl.resource}` : '/')\n      + (splitedUrl.id ? '/:id' : '')\n      + (splitedUrl.verb ? `/${splitedUrl.verb}` : '');\n  }\n}\n\nexport default UrlParser;\n","import * as WorkboxWindow from 'workbox-window';\n\nconst swRegister = async () => {\n  if (!('serviceWorker' in navigator)) {\n    console.log('Service Worker not supported in the browser');\n    return;\n  }\n\n  const wb = new WorkboxWindow.Workbox('/sw.bundle.js');\n\n  try {\n    await wb.register();\n    console.log('Service worker registered');\n  } catch (error) {\n    console.log('Failed to register service worker', error);\n  }\n};\n\nexport default swRegister;\n"],"names":["routes","this","url","UrlParser","Home","Favorite","AboutUs","Detail","Review","urlSplits","split","resource","id","verb","splitedUrl","window","location","hash","slice","toLowerCase","navigator","console","log","wb","WorkboxWindow","register"],"sourceRoot":""}