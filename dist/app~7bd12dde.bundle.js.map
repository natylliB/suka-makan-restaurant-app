{"version":3,"file":"app~7bd12dde.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/data/restaurant-api.js","webpack://restaurant-apps/./src/scripts/data/string-truncate.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import { openDB } from 'idb';\nimport CONFIG from '../globals/config';\n\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nconst FavoriteRestaurantIdb = {\n  async getRestaurant(id) {\n    if (!id) {\n      return;\n    }\n\n    // eslint-disable-next-line consistent-return\n    return (await dbPromise).get(OBJECT_STORE_NAME, id);\n  },\n  async getAllRestaurants() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n  async putRestaurant(restaurant) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!restaurant.hasOwnProperty('id')) {\n      return;\n    }\n    // eslint-disable-next-line consistent-return\n    return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\n  },\n  async deleteRestaurant(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  },\n};\n\nexport default FavoriteRestaurantIdb;\n","import CONFIG from './config';\n\nconst API_ENDPOINT = {\n  RESTAURANT_LIST: new URL('list', CONFIG.BASE_URL),\n  DETAIL: (id) => new URL(`detail/${id}`, CONFIG.BASE_URL),\n  SEARCH: (searchString) => {\n    const url = new URL('/search', CONFIG.BASE_URL);\n    url.searchParams.append('q', searchString);\n    return url;\n  },\n  REVIEW: new URL('review', CONFIG.BASE_URL),\n  PICTURE: (pictureId, imgSize) => {\n    const url = new URL(`${imgSize}/${pictureId}`, CONFIG.PICTURE_URL);\n    return url.toString();\n  },\n};\n\nexport default API_ENDPOINT;\n","import API_ENDPOINT from '../globals/api-endpoint';\n\nclass RestaurantAPI {\n  static async restaurantsList() {\n    const response = await fetch(API_ENDPOINT.RESTAURANT_LIST);\n    const responseJSON = await response.json();\n    return responseJSON.restaurants;\n  }\n\n  static async restaurantDetail(id) {\n    const response = await fetch(API_ENDPOINT.DETAIL(id));\n    const responseJSON = await response.json();\n    return responseJSON.restaurant;\n  }\n\n  static async searchRestaurant(searchString) {\n    const response = await fetch(API_ENDPOINT.SEARCH(searchString));\n    const responseJSON = await response.json();\n    return responseJSON.restaurants;\n  }\n\n  static async addReview(id, name, review) {\n    const reviewContent = {\n      id,\n      name,\n      review,\n    };\n    const response = await fetch(API_ENDPOINT.REVIEW, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(reviewContent),\n    });\n    const responseJSON = await response.json();\n    return responseJSON;\n  }\n\n  static getImageSrc(pictureId, size) {\n    const sizes = ['small', 'medium', 'large'];\n    if (sizes.includes(`${size}`.toLowerCase())) {\n      return API_ENDPOINT.PICTURE(pictureId, size);\n    }\n    throw EvalError('size is either, \"small\", \"medium\" or \"large\".');\n  }\n}\n\nexport default RestaurantAPI;\n","function stringTruncate(string) {\n  const maxChar = 60;\n  const truncatedString = string.substring(0, maxChar);\n  return `${truncatedString} ...`;\n}\n\nexport default stringTruncate;\n","const CONFIG = {\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\n  PICTURE_URL: 'https://restaurant-api.dicoding.dev/images/',\n  CACHE_NAME: new Date().toISOString(),\n  DATABASE_NAME: 'restoran-suka-makan-database',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'favorite-restaurant',\n};\n\nexport default CONFIG;\n","import 'regenerator-runtime';\nimport '../styles/main.scss';\nimport '../styles/responsive.scss';\nimport './views/webcomponents/loader-screen';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\nimport App from './views/app';\nimport swRegister from './utils/sw-register';\n\nconst main = () => {\n  const app = new App();\n\n  app.renderPage();\n\n  window.addEventListener('hashchange', () => {\n    app.renderPage();\n  });\n};\n\nwindow.addEventListener('load', () => {\n  main();\n  swRegister();\n});\n"],"names":["i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","RESTAURANT_LIST","URL","DETAIL","SEARCH","searchString","url","searchParams","append","REVIEW","PICTURE","pictureId","imgSize","toString","fetch","API_ENDPOINT","response","json","responseJSON","restaurants","name","review","reviewContent","method","headers","body","JSON","stringify","size","includes","toLowerCase","EvalError","string","truncatedString","substring","BASE_URL","PICTURE_URL","CACHE_NAME","Date","toISOString","window","addEventListener","app","App","renderPage","swRegister"],"sourceRoot":""}